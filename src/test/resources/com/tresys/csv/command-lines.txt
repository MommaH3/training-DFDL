
#
# Just parse CSV normally
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/csv.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/simpleCSV.csv

#
# Parse CSV showing that nothing is enforcing row length
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/csv.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/simpleCSV.bad.1.csv

#
# Parse with header enforcement (showing it works)
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/csvHeaderEnforced.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/simpleCSV.csv

#
# Parse with header enforcement (Negative test)
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/csvHeaderEnforced.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/simpleCSV.bad.1.csv

#
# NameDOB1
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB1.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB1.csv

#
# NameDOB1 - with date error - ends with "left over data" and
# an infoset that is missing the final row data.
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB1.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB1.bad.csv

#
# NameDOB2
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB2.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB1.csv

#
# NameDOB2 - with date error.
#
# Use of terminators makes it simpler and now we get a xs:date-oriented error
# message
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB2.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB1.bad.csv

#
# NameDOB3 - , | or // as terminators of items.
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB3.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB3.csv

#
# NameDOB3 unparsing - doesn't recreate the input. Creates Canonical form of data
# which always uses commas.
#
daffodil unparse -s src/main/resources/com/tresys/csv/xsd/nameDOB3.dfdl.xsd \
    src/test/resources/com/tresys/csv/infosets/nameDOB1.xml

#
# Fun with unix pipes
#
cat src/test/resources/com/tresys/csv/data/nameDOB3.csv | \
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB3.dfdl.xsd | \
daffodil unparse -s src/main/resources/com/tresys/csv/xsd/nameDOB3.dfdl.xsd

#
# NameDOB4 - escape schemes
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB4.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB4.csv

daffodil unparse -s src/main/resources/com/tresys/csv/xsd/nameDOB4.dfdl.xsd \
  src/test/resources/com/tresys/csv/infosets/nameDOB4.xml

#
# NameDOB5 - dynamic separator
#
daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB5.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB5.csv

daffodil unparse -s src/main/resources/com/tresys/csv/xsd/nameDOB5.dfdl.xsd \
  src/test/resources/com/tresys/csv/infosets/nameDOB5.xml

#
# NameDOB7 - binary with hidden flags
#

daffodil parse -s src/main/resources/com/tresys/csv/xsd/nameDOB7.dfdl.xsd \
  src/test/resources/com/tresys/csv/data/nameDOB6.bin

daffodil unparse -s src/main/resources/com/tresys/csv/xsd/nameDOB7.dfdl.xsd \
  src/test/resources/com/tresys/csv/infosets/nameDOB7.xml | \
  od -v -t x1

